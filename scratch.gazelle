(define (product 
		 [
		  (([:] acc)
		   acc)
		  (([: hd (tail tl)] acc)
		   (recur tl (_* acc hd)))
		  ((object)
		   (recur object 1))
		  ]))

(define product-two 
  (lambda [
		   (([:] acc)
			acc)
		   (([: hd (tail tl)] acc)
			(recur tl (_* acc hd)))
		   ((object)
			(recur object 1))
		   ]))

(define simple 
  (lambda (x) (_+ "what!? " x)))
